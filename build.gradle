buildscript {
    ext {
        springBootVersion = '2.7.3'
        managementVersion = '1.0.13.RELEASE'
        querydslVersion  = '1.0.10'
    }
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${managementVersion}"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslVersion}"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
//    id 'org.springdoc.openapi-gradle-plugin' version '1.4.0'
//    id 'org.springframework.experimental.aot' version '0.11.5'
}

group = 'com.hanssem.remodeling'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
}

ext {
    set('springCloudVersion', "2021.0.3")
    queryDslVersion = '5.0.0'
//    axonVersion = '4.5.9'
//    swaggerVersion = '3.0.0'
}

ext['log4j2.version'] = '2.17.1'

dependencies {


    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation 'com.querydsl:querydsl-apt'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    /** feign client */
    implementation 'io.github.openfeign:feign-gson:11.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.2'

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
//    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.codehaus.janino:janino:3.1.9'
    implementation 'com.jcraft:jsch:0.1.55'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.5'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-secrets-manager-config:2.2.6.RELEASE'

    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'

    implementation 'com.j256.cloudwatchlogbackappender:cloudwatchlogbackappender:2.1'
//    implementation 'ca.pjer:logback-awslogs-appender:1.4.0'
    implementation 'org.springframework.kafka:spring-kafka'
//    implementation ("org.axonframework:axon-spring-boot-starter:${axonVersion}") {
//        exclude module: 'io.axoniq:axonserver-connector-java'
//    }
//    implementation 'io.axoniq:axonserver-connector-java:4.6.1'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
//    implementation 'org.jetbrains:annotations:20.1.0'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    annotationProcessor (
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.mapstruct:mapstruct-processor:1.5.3.Final',
            'org.projectlombok:lombok:1.18.20',
            'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    )


    testImplementation 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation group: 'com.h2database', name: 'h2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

test {
    useJUnitPlatform()
}
